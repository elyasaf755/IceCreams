<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:IceCreams">

    <!--TextBox Style-->
    <Style TargetType="{x:Type TextBox}">

        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0 10 0 10" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="250" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    
                    <!-- Placeholder Float Animations -->
                    <ControlTemplate.Resources>
                        
                        <!-- Enter Animations -->
                        <Storyboard x:Key="enterAnim">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-91">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-26">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            
                        </Storyboard>

                        <!-- Exit Animations -->
                        <Storyboard x:Key="exitAnim">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            
                        </Storyboard>

                    </ControlTemplate.Resources>

                    <!-- TextBox Content -->
                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="Gray">

                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </TextBlock.RenderTransform>

                        </TextBlock>

                    </Grid>

                    <!-- Triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>

                        <!-- Tooltip disabled while text is empty -->
                        <Trigger Property="ToolTip" Value="{x:Static sys:String.Empty}">
                            <Setter Property="ToolTipService.IsEnabled" Value="False" />
                        </Trigger>

                        <!-- Placeholder Float Triggers -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource exitAnim}" />
                            </MultiTrigger.EnterActions>
                            
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource enterAnim}" />
                            </MultiTrigger.ExitActions>
                            
                        </MultiTrigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--TextBox Regular Float Style-->
    <Style TargetType="{x:Type TextBox}" x:Key="RegularFloatTextBox">

        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0 10 0 10" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="250" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">

                    <!-- Placeholder Float Animations -->
                    <ControlTemplate.Resources>

                        <!-- Enter Animations -->
                        <Storyboard x:Key="enterAnim">
                            
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-26">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimation Storyboard.TargetName="placeholder" Duration="0:0:0.3" From="20" To="12"  Storyboard.TargetProperty="FontSize"/>

                        </Storyboard>

                        <!-- Exit Animations -->
                        <Storyboard x:Key="exitAnim">
                            
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimation Storyboard.TargetName="placeholder" Duration="0:0:0.3" From="12" To="20"  Storyboard.TargetProperty="FontSize"/>
                        </Storyboard>

                    </ControlTemplate.Resources>

                    <!-- TextBox Content -->
                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="Gray">

                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </TextBlock.RenderTransform>

                        </TextBlock>

                    </Grid>

                    <!-- Triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>

                        <!-- Placeholder Float Triggers -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource exitAnim}" />
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource enterAnim}" />
                            </MultiTrigger.ExitActions>

                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--TextBox Regular Placeholder Style-->
    <Style TargetType="{x:Type TextBox}" x:Key="PlaceholderTextBox">

        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0 10 0 10" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="250" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Grid>

                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="Placeholder"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="Gray"
                                   >
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--PasswordBox Style-->
    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0 10 0 10" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="250" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="local:MonitorPasswordProperty.Value" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">

                    <!-- Placeholder Float Animations -->
                    <ControlTemplate.Resources>

                        <!-- Enter Animations -->
                        <Storyboard x:Key="enterAnim">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-75">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-26">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>

                        <!-- Exit Animations -->
                        <Storyboard x:Key="exitAnim">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                    </ControlTemplate.Resources>

                    <!-- PasswordBox Content -->
                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="Gray">

                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </TextBlock.RenderTransform>

                        </TextBlock>

                    </Grid>

                    <!-- Triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>

                        <!-- Placeholder Float Triggers -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="local:HasTextProperty.IsPasswordEmpty" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource exitAnim}" />
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource enterAnim}" />
                            </MultiTrigger.ExitActions>

                        </MultiTrigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--Date ComboBox Style-->
    <Style TargetType="{x:Type ComboBox}" x:Key="DateComboBox">
        <Setter Property="FontSize" Value="30" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ComboBox x:Name="cbItems" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                  ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}}"
                                  SelectedValue ="{Binding SelectedValue, RelativeSource={RelativeSource TemplatedParent}}" 
                                  VerticalContentAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                  HorizontalContentAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                  />
                        <TextBlock x:Name="placeholder" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" 
                                   IsHitTestVisible="False" Visibility="Hidden" TextAlignment="Center" VerticalAlignment="Center"
                                   />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="cbItems" Property="SelectedItem" Value="{x:Null}">
                            <Setter TargetName="placeholder" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--Registration PasswordBox Style-->
    <Style TargetType="{x:Type PasswordBox}" x:Key="RegisterPasswordBox">

        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0 10 0 10" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="250" />
        <Setter Property="HorizontalAlignment" Value="Center" />

        <Setter Property="local:MonitorPasswordProperty.Value" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">

                    <!-- Placeholder Float Animations -->
                    <ControlTemplate.Resources>

                        <!-- Enter Animations -->
                        <Storyboard x:Key="enterAnim">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-103">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-20">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontSize)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="12">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>

                        <!-- Exit Animations -->
                        <Storyboard x:Key="exitAnim">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontSize)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="20">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            
                        </Storyboard>

                    </ControlTemplate.Resources>

                    <!-- PasswordBox Content -->
                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="DarkSlateGray">

                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </TextBlock.RenderTransform>

                        </TextBlock>

                    </Grid>

                    <!-- Triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFACAC3D"/>
                        </Trigger>
                        
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFACAC3D"/>
                        </Trigger>

                        <!-- Placeholder Float Triggers -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="local:HasTextProperty.IsPasswordEmpty" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource exitAnim}" />
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource enterAnim}" />
                            </MultiTrigger.ExitActions>

                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--Registration Confirm PasswordBox Style-->
    <Style TargetType="{x:Type PasswordBox}" x:Key="RegisterConfirmPasswordBox">

        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0 10 0 10" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="250" />
        <Setter Property="HorizontalAlignment" Value="Center" />

        <Setter Property="local:MonitorPasswordProperty.Value" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">

                    <!-- Placeholder Float Animations -->
                    <ControlTemplate.Resources>

                        <!-- Enter Animations -->
                        <Storyboard x:Key="enterAnim">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-75">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-20">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontSize)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="12">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>

                        <!-- Exit Animations -->
                        <Storyboard x:Key="exitAnim">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontSize)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="20">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>

                    </ControlTemplate.Resources>

                    <!-- PasswordBox Content -->
                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="DarkSlateGray">

                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </TextBlock.RenderTransform>

                        </TextBlock>

                    </Grid>

                    <!-- Triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFACAC3D"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFACAC3D"/>
                        </Trigger>

                        <!-- Placeholder Float Triggers -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="local:HasTextProperty.IsPasswordEmpty" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource exitAnim}" />
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource enterAnim}" />
                            </MultiTrigger.ExitActions>

                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- Registration TextBox -->
    <Style TargetType="{x:Type TextBox}" x:Key="RegisterationTextBox">

        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0 10 0 10" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="250" />
        <Setter Property="HorizontalAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">

                    <!-- Placeholder Float Animations -->
                    <ControlTemplate.Resources>

                        <!-- Enter Animations -->
                        <Storyboard x:Key="enterAnim">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-91">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-20">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontSize)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="12">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>

                        <!-- Exit Animations -->
                        <Storyboard x:Key="exitAnim">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontSize)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>

                    </ControlTemplate.Resources>

                    <!-- Content -->
                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="Gray"
                                   FontSize="20">

                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </TextBlock.RenderTransform>

                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFACAC3D"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFACAC3D"/>
                        </Trigger>

                        <!-- Placeholder Float Triggers -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource exitAnim}" />
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource enterAnim}" />
                            </MultiTrigger.ExitActions>

                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--TextBox Regular Float Style-->
    <Style TargetType="{x:Type TextBox}" x:Key="RegularFloatTextBox2">

        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="250" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">

                    <!-- Placeholder Float Animations -->
                    <ControlTemplate.Resources>

                        <!-- Enter Animations -->
                        <Storyboard x:Key="enterAnim">

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-26">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimation Storyboard.TargetName="placeholder" Duration="0:0:0.3" From="20" To="12"  Storyboard.TargetProperty="FontSize"/>

                        </Storyboard>

                        <!-- Exit Animations -->
                        <Storyboard x:Key="exitAnim">

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="placeholder">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuinticEase EasingMode="EaseInOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimation Storyboard.TargetName="placeholder" Duration="0:0:0.3" From="12" To="20"  Storyboard.TargetProperty="FontSize"/>
                        </Storyboard>

                    </ControlTemplate.Resources>

                    <!-- TextBox Content -->
                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="Gray">

                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </TextBlock.RenderTransform>

                        </TextBlock>

                    </Grid>

                    <!-- Triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>

                        <!-- Placeholder Float Triggers -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource exitAnim}" />
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource enterAnim}" />
                            </MultiTrigger.ExitActions>

                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>